更新日志：


0.1.0.6  编辑对话框，增加 [取消] 的处理  与  机翻时，自动识别的逻辑。

原有的   编辑 书籍， 编辑 章节 等对话框，  只有 [确定] 按钮， 没有 [取消] 的按钮。
增加按钮后， 如果是点了 [确定] 按钮， 更新数据后， 会去刷新列表画面的数据。



原有的机翻处理， 仅仅能处理  “原文 + 译文” 的处理。
这么一来， 就只能从 excite 复制 机翻结果过来。
本次修改以后， 在粘贴数据之后，会自动进行判断处理的模式。


例如 原文有 100 行
粘贴过来的内容，是 200 行的话，我就认为，本次处理， 是 “原文 + 译文” 的。

如果粘贴过来的内容，是 100 行的话，我就认为， 本次处理， 是只有 “译文”。
在只有“译文”的情况下，会去逐行检查数据，如果存在有 某行， 原文是空白， 而译文有数据的话，则报错。 (当然，原文有内容，译文空白的，也是要报错的)

如果 粘贴过来的内容， 既不是是 100 行， 也不是 200行， 则默认为 “原文 + 译文”， 并提示用户是否这样处理。


这样修改之后，机翻文本，可以从 excite 生成， 也可以从 百度翻译 生成。



--------------------------------------------------------------------------------
0.1.0.5 增加 自动替换 处理逻辑 与  关闭窗口时隐藏的逻辑。

原有的 机翻处理， 会遇到这样的情况。

例如：总是把 勇者 翻译为 有勇气的人，把 騎士 翻译为 骑马的武士。

这种情况下，每次都要手工修改。 把这个，放到 名词 那里去处理，也不合适。

因此，增加 自动替换 的处理逻辑。

假如在 自动替换 那里， 增加了
原始文本 = 騎士
机翻文本 = 骑马的武士
结果文本 = 骑士
的数据。

当机翻的时候， 检测到，  原始文本里面， 有 “騎士”， 并且， 机翻文本里面， 有  “骑马的武士”， 那么，自动生成结果文本， 把 “骑马的武士”， 替换为 “骑士”


关于 关闭窗口时隐藏， 就是程序，点击 右上角的 叉 的时候， 不关闭窗口，而是隐藏到托盘那里。
双击托盘的图标，打开窗口。
真的要退出，通过在托盘那里的图标，鼠标右键，弹出菜单中选择[退出]



--------------------------------------------------------------------------------
0.1.0.4  增加 导出书籍/导入书籍 的处理逻辑。

原有的 导出/导入 逻辑， 仅仅能一次  导出/导入  一话。

当章节数多， 需要大量移交时， 一次一话的操作， 太费时间。

本次更新，增加 导出 一个书籍的 全部章节 的处理 （包含 每一话， 以及 名词 列表。）


导入的时候，如果本机还没有这个小说， 则会全部新增。
如果已经有了，则会询问， 是 旧数据保留，只新增，   还是全部都替换掉。



--------------------------------------------------------------------------------
0.1.0.3  增加 编辑书籍的 逻辑；    数据导出逻辑的修改；  名称管理逻辑的Bug修改。

当一次 创建了多本小说后， 各个画面， 小说的下拉列表中， 会列出所有的小说。
而某些可能是误操作创建的。

这样会导致，用户可能一直在 完成 C 这个小说。
但是由于创建了一个 A 的小说。
用户每次工作的时候，都要去下拉列表里面， 把 A 修改为 C ，然后再进一步操作。

增加 编辑书籍的 逻辑。 可以把 A 设置为 无效， 这样， 下拉列表中， 将不再出现 A。
将来需要 A 的时候， 可以去编辑， 把 A 设置成 有效， 这样，下拉列表中， 将再次出现 A。





原有的数据导出， 把 数据库中的 LineID 也导出了。
由于这个是 数据库自增列， 没有实际的意义。

当用户在 A 计算机上，工作了一半，导出为文件 a01.xml。
将这个文件，导入 B 计算机后，又做了部分工作，导出为文件  b01.xml。

在把数据，导入到 A 计算机之前， 想比较一下，作了什么修改。
结果，文本比较工具，显示出， 大量的 不同点。

因为 每行的 自增流水是不一样的。这样就变成每行都变化了。

修改之后的处理逻辑， 是 把 自增流水，创建时间、最后修改时间、创建人，最后修改人 这些信息，都排除掉。




原有的 名称管理， 预期是 ， 选择一个  名称之后，  列出书籍中， 所有使用到这个  名称的  行信息。
这样，当 某个 人名，翻译到一半的时候， 需要修改。
这个时候， 通过选择这个人名，  列出文章中， 所有使用到这个人名的地方， 然后 ， 找到以前翻译过的章节，进行修改。

这个逻辑， 在 SQL Server 数据库下， 是没有问题的。
但是在 SQLite 数据库的时候，也就是你们下载的版本， 没有正确地 筛选出来。
这个版本，修正了这个 Bug。


--------------------------------------------------------------------------------
0.1.0.2  修改 生成结果文本的 逻辑。


在读取源小说文本的时候，如果遇到空白行，那么生成结果文本的时候， 也相应地生成空白行。

但是：
用 PC 看， 与用 手机的客户端看， 效果不一样。

下面的 185话是 修改前的， 186话 是修改后的。

185話 无聊的皇帝
http://tieba.baidu.com/p/4401690880


186話 「伊凡皇子的棋谱」
http://tieba.baidu.com/p/4401707983



修改的逻辑是： 
修改前是 遇到空白行， 简单的换行。
修改后是 遇到空白行， 加一个  全角空格 之后，再换行。




--------------------------------------------------------------------------------
0.1.0.1  修改批量创建章节的逻辑。



由于 人狼转生的第一行， 是  “182話”  这样的文字信息。
http://ncode.syosetu.com/n1576cu/182/


因此， 上一个版本的时候， 就忽略掉这一行了。


但是，别的文章， 第一行， 是正文的内容， 结果就被 错误的忽略掉了。
例如：
http://ncode.syosetu.com/n1094bz/65/


这个版本，进行修正。


修正之后， 创建章节的时候， 能够正确地把 第一行， 也读取到数据库。




0.1.0.0  初始版本.